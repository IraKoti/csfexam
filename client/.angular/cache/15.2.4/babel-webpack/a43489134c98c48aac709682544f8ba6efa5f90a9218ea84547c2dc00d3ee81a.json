{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NycMovieService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API_URL = \"/api/search\";\n  }\n  searchMovie(movieName) {\n    const params = new HttpParams().set(\"query\", movieName);\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return lastValueFrom(this.httpClient.get(this.API_URL, {\n      params: params,\n      headers: headers\n    }));\n  }\n}\nNycMovieService.ɵfac = function NycMovieService_Factory(t) {\n  return new (t || NycMovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nNycMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NycMovieService,\n  factory: NycMovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAE1E,SAASC,aAAa,QAAQ,MAAM;;;AAQpC,OAAM,MAAOC,eAAe;EAGxBC,YAAqBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IADvB,YAAO,GAAW,aAAa;EACQ;EAE/CC,WAAW,CAACC,SAAgB;IAExB,MAAMC,MAAM,GAAG,IAAIP,UAAU,EAAE,CAC1BQ,GAAG,CAAC,OAAO,EAACF,SAAS,CAAC;IAE3B,MAAMG,OAAO,GAAG,IAAIV,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,iCAAiC,CAAC;IACxF,OAAOP,aAAa,CAAC,IAAI,CAACG,UAAU,CAC/BM,GAAG,CAAW,IAAI,CAACC,OAAO,EAAC;MAACJ,MAAM,EAAEA,MAAM;MAAEE,OAAO,EAAEA;IAAO,CAAC,CAAC,CAAC;EACxE;;AAbSP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YAHZ;AAAM","names":["HttpHeaders","HttpParams","lastValueFrom","NycMovieService","constructor","httpClient","searchMovie","movieName","params","set","headers","get","API_URL","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\irawan\\src\\csfexam\\client\\src\\app\\services\\nycservice.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { lastValueFrom } from 'rxjs';\r\nimport { Review } from '../models/review';\r\nimport { Comment } from '../models/comment';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n  })\r\n\r\nexport class NycMovieService {\r\n\r\n    private API_URL: string = \"/api/search\"\r\n    constructor( private httpClient: HttpClient) { }\r\n\r\n    searchMovie(movieName:string): Promise<any>\r\n    {\r\n        const params = new HttpParams()\r\n            .set(\"query\",movieName);\r\n\r\n        const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\r\n        return lastValueFrom(this.httpClient\r\n            .get<Review[]>(this.API_URL,{params: params, headers: headers}));\r\n    }\r\n\r\n    saveComment(c: Comment)\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}